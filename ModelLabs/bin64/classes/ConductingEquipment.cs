//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTN {
    using System;
    using FTN;
    
    
    /// The parts of the power system that are designed to carry current or that are conductively connected therewith. ConductingEquipment is contained within an EquipmentContainer that may be a Substation, or a VoltageLevel or a Bay within a Substation.
    public class ConductingEquipment : Equipment {
        
        /// Use association to ConductingEquipment only when there is no VoltageLevel container used.
        private BaseVoltage cim_BaseVoltage;
        
        private const bool isBaseVoltageMandatory = false;
        
        private const string _BaseVoltagePrefix = "cim";
        
        /// Describes the phases carried by a conducting equipment.
        private PhaseCode? cim_phases;
        
        private const bool isPhasesMandatory = true;
        
        private const string _phasesPrefix = "cim";
        
        /// Rated voltage of conducting equipment (can be different from BaseVoltage).
        private System.Single? cim_ratedVoltage;
        
        private const bool isRatedVoltageMandatory = false;
        
        private const string _ratedVoltagePrefix = "ftn";
        
        public virtual BaseVoltage BaseVoltage {
            get {
                return this.cim_BaseVoltage;
            }
            set {
                this.cim_BaseVoltage = value;
            }
        }
        
        public virtual bool BaseVoltageHasValue {
            get {
                return this.cim_BaseVoltage != null;
            }
        }
        
        public static bool IsBaseVoltageMandatory {
            get {
                return isBaseVoltageMandatory;
            }
        }
        
        public static string BaseVoltagePrefix {
            get {
                return _BaseVoltagePrefix;
            }
        }
        
        public virtual PhaseCode Phases {
            get {
                return this.cim_phases.GetValueOrDefault();
            }
            set {
                this.cim_phases = value;
            }
        }
        
        public virtual bool PhasesHasValue {
            get {
                return this.cim_phases != null;
            }
        }
        
        public static bool IsPhasesMandatory {
            get {
                return isPhasesMandatory;
            }
        }
        
        public static string PhasesPrefix {
            get {
                return _phasesPrefix;
            }
        }
        
        public virtual float RatedVoltage {
            get {
                return this.cim_ratedVoltage.GetValueOrDefault();
            }
            set {
                this.cim_ratedVoltage = value;
            }
        }
        
        public virtual bool RatedVoltageHasValue {
            get {
                return this.cim_ratedVoltage != null;
            }
        }
        
        public static bool IsRatedVoltageMandatory {
            get {
                return isRatedVoltageMandatory;
            }
        }
        
        public static string RatedVoltagePrefix {
            get {
                return _ratedVoltagePrefix;
            }
        }
    }
}
